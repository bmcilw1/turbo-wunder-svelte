// Code generated by wunderctl. DO NOT EDIT.

// @ts-ignore: no-types available
import { JSONSchema7 } from 'json-schema';

interface Schema {
  Continents: {
    input: JSONSchema7;
    response: JSONSchema7;
  };
  Countries: {
    input: JSONSchema7;
    response: JSONSchema7;
  };
}

const jsonSchema: Schema = {
  Continents: {
    input: { type: 'object', properties: {}, additionalProperties: false, definitions: {} },
    response: {
      type: 'object',
      properties: {
        data: {
          type: 'object',
          properties: {
            countries_continents: {
              type: 'array',
              items: {
                type: 'object',
                properties: { name: { type: 'string' }, code: { type: 'string' } },
                additionalProperties: false,
                required: ['name', 'code']
              }
            }
          },
          additionalProperties: false,
          required: ['countries_continents']
        }
      },
      additionalProperties: false
    }
  },
  Countries: {
    input: {
      type: 'object',
      properties: { filter: { $ref: '#/definitions/countries_CountryFilterInput' } },
      additionalProperties: false,
      definitions: {
        countries_CountryFilterInput: {
          additionalProperties: false,
          type: ['object', 'null'],
          properties: {
            code: { $ref: '#/definitions/countries_StringQueryOperatorInput' },
            continent: { $ref: '#/definitions/countries_StringQueryOperatorInput' },
            currency: { $ref: '#/definitions/countries_StringQueryOperatorInput' }
          }
        },
        countries_StringQueryOperatorInput: {
          additionalProperties: false,
          type: ['object', 'null'],
          properties: {
            eq: { type: ['string', 'null'] },
            glob: { type: ['string', 'null'] },
            in: { type: ['array', 'null'], items: { type: ['string', 'null'] } },
            ne: { type: ['string', 'null'] },
            nin: { type: ['array', 'null'], items: { type: ['string', 'null'] } },
            regex: { type: ['string', 'null'] }
          }
        }
      }
    },
    response: {
      type: 'object',
      properties: {
        data: {
          type: 'object',
          properties: {
            countries_countries: {
              type: 'array',
              items: {
                type: 'object',
                properties: {
                  code: { type: 'string' },
                  name: { type: 'string' },
                  capital: { type: 'string' }
                },
                additionalProperties: false,
                required: ['code', 'name']
              }
            }
          },
          additionalProperties: false,
          required: ['countries_countries']
        }
      },
      additionalProperties: false
    }
  }
};
export default jsonSchema;
